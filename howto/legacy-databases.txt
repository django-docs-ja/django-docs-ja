=====================================
古いデータベースを Django に組み込む
=====================================

:revision-up-to: 17812 (1.4)

Django が最も得意とするのは新たなアプリケーションですが、古いデータベースの
組み込みも可能です。 Django には組み込み作業を可能な限り自動化するための二
つのユーティリティが付属しています。

このドキュメントでは、読者は :doc:`公式チュートリアル </intro/tutorial01>`
のカバーしている Django の基礎を良く知っているものと仮定しています。

Django にデータベースパラメタを指定する
=======================================

まず、データベースへの接続パラメタとデータベース名を Django に指示する必要
があります。 :setting:`DATABASES` 設定を編集し、 ``'default'`` コネクション
に次をキーとして値を設定してください:

* :setting:`NAME`
* :setting:`ENGINE`
* :setting:`USER`
* :setting:`PASSWORD`
* :setting:`HOST`
* :setting:`PORT`

モデルの自動生成
================

.. highlight:: bash

Django には、既存のデータベースにイントロスペクションを行ってモデルを生成で
きるコマンド、 :djadmin:`inspectdb` が付属しています。出力を見るには以下の
コマンドを実行します::

    python manage.py inspectdb

標準の Unix 出力リダイレクションを使って、この内容をファイルに保存しておき
ます::

    python manage.py inspectdb > appname.py

この機能はショートカット目的で、正しいモデル生成を行うためのものではありま
せん。詳しくは :djadmin:`django-admin.py のドキュメント <inspectdb>` を参照
してください。

モデルを削除し終えたら、モジュールをアプリケーションの ``models.py`` に入れ、
アプリケーションを収めているパッケージ内に配置して、
:setting:`INSTALLED_APPS` 設定にアプリケーションを追加しておきます。

Django のコアデータテーブルのインストール
=========================================

次に、 :djadmin:`syncdb` コマンドを実行して、 Django のコアデータテーブルを
データベースにインストールします:

    python manage.py syncdb

テストと確認
=============

ここまでで解説したのは基本です。この後は、生成したモデルが正しく動作するま
で変更してゆく必要があるでしょう。 Django データベース API を使ってアプリケー
ションのデータにアクセスしたり、 Django admin サイトでオブジェクトを編集し
てみたりしてください。


