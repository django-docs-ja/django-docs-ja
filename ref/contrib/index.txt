====================
"contrib" パッケージ
====================

:revision-up-to: 17812 (1.4)

Django は Python の `"batteries included" 哲学`_ を目指しています。 Django
には Web 開発における課題を解くための様々な外部オプションツールがついてきま
す。

これらのコードは Django 配布物中の ``django/contrib`` にあります。このドキュ
メントでは、 ``contrib`` 下のパッケージをざっと解説し、パッケージを利用する
ときに必要な依存関係について説明します。

.. admonition:: Note

    これらのアドオンの大半、特にモデルやテンプレートタグの定義が入っている
    アドオンを使うには、パッケージ名 (例えば ``'django.contrib.admin'``) を
    :setting:`INSTALLED_APPS` 設定に追加して、 ``manage.py syncdb`` を
    再度実行する必要があります。

.. _`"batteries included" 哲学`: http://python.jp/doc/release/tutorial/stdlib.html#batteries-included

.. toctree::
   :maxdepth: 1

   admin/index
   auth
   comments/index
   contenttypes
   csrf
   databrowse
   flatpages
   formtools/index
   gis/index
   humanize
   localflavor
   markup
   messages
   redirects
   sitemaps
   sites
   staticfiles
   syndication
   webdesign

admin
=====

Django の自動化管理インタフェースです。詳しくは
:doc:`チュートリアルその 2 </intro/tutorial02>` と
:doc:`admin のドキュメント </ref/contrib/admin/index>` を参照してください。

auth_ および contenttypes_ パッケージをインストールしておく必要があります。

auth
====

Django の認証フレームワークです。詳しくは :doc:`/topics/auth` を参照して下さ
い。

comments
========

.. A simple yet flexible comments system. See :doc:`/ref/contrib/comments/index`.

シンプルかつ柔軟なコメントシステムです。 :doc:`/ref/contrib/comments/index`
を参照してください。

contenttypes
============

コンテンツの「タイプ」をフックしするための軽量フレームワークです。
コンテンツタイプは、インストールされている Django の個々のモデルを指します。

:doc:`contenttypes のドキュメント </ref/contrib/contenttypes>` を参照してください。

csrf
====

クロスサイトリクエストフォージェリ (Cross Site Request Forgeries) を阻止す
るためのミドルウェアです。

:doc:`csrf のドキュメント </ref/contrib/csrf>` を参照してください。


flatpages
=========

「フラット (flat) な」 HTML コンテンツをデータベースで扱うためのフレームワー
クです。

:doc:`flatpages のドキュメント </ref/contrib/flatpages>` を参照してください。

sites_ パッケージもインストールしておく必要があります。

formtools
=========

Django の新しいフォーム (django.forms) に対する高水準の抽象化インタフェー
スです。

django.contrib.formtools.preview
--------------------------------

「 HTML フォームを表示し、必ずプレビューを行ってからフォームデータを提出す
る」というワークフローを抽象化したものです。

:doc:`フォームプレビューのドキュメント </ref/contrib/formtools/form-preview>`
を参照してください。

django.contrib.formtools.wizard
-------------------------------

フォームを複数の Web ページにわたるように分割します。

:doc:`フォームウィザードのドキュメント </ref/contrib/formtools/form-wizard>`
を参照してください。

gis
====

.. A world-class geospatial framework built on top of Django, that enables
   storage, manipulation and display of spatial data.

空間情報の保存、操作、表示を実現する、Django の上に構築された世界クラスの
地理空間情報フレームワークです。

.. See the :doc:`/ref/contrib/gis/index` documentation for more.

詳細については :doc:`/ref/contrib/gis/index` のドキュメントを参照してください。

humanize
========

データに「人間くささ (human touch)」を与えるための Django テンプレートフィ
ルタです。

:doc:`humanize のドキュメント </ref/contrib/humanize>` を参照してください。

localflavor
===========

特定の国や文化でのみ有用な Django の短いコード (snippet) を集めたものです。
例えば、 ``django.contrib.localflavor.us.forms`` には、米国の郵便番号
(U.S. zip code) を検証するための ``USZipCodeField`` が入っています。

:doc:`localflavor のドキュメント </ref/contrib/localflavor>` を参照してくだ
さい。

markup
======

.. A collection of template filters that implement common markup languages

一般的なマークアップ言語を実装したテンプレートフィルタのコレクションです。

.. See the :doc:`markup documentation </ref/contrib/markup>`.

:doc:`markup のドキュメント </ref/contrib/markup>` を参照してください。

messages
========

.. versionchanged:: 1.2
    messages フレームワークが追加されました。

.. A framework for storing and retrieving temporary cookie- or session-based
   messages

クッキーまたはセッションベースの、一時的なメッセージを格納・取得する
フレームワークです。

.. See the :doc:`messages documentation </ref/contrib/messages>`.

:doc:`messages のドキュメント </ref/contrib/messages>` を参照してください。

redirects
=========

リダイレクトを管理するためのフレームワークです。

:doc:`redirects のドキュメント </ref/contrib/redirects>` を参照してください。

sessions
========

セッション管理のためのフレームワークです。

:doc:`セッションのドキュメント </topics/http/sessions>` を参照してください。

sites
=====

一つのデータベースと Django を使って複数のウェブサイトを操作できるようにす
るための軽量フレームワークです。このフレームワークを使うと、オブジェクトを
特定の (一つまたは複数の) サイトに関連づけできます。

:doc:`sites のドキュメント </ref/contrib/sites>` を参照してください。

sitemaps
========

Google サイトマップ XML ファイルを生成するためのフレームワークです。

:doc:`sitemaps のドキュメント </ref/contrib/sitemaps>` を参照してください。

syndication
===========

RSS および Atom 形式の配信フィード (syndication feed) をごく簡単に生成する
ためのフレームワークです。

:doc:`配信フィードフレームワークのドキュメント </ref/contrib/syndication>`
を参照してください。

webdesign
=========

Web の *開発者* ではなく *デザイナ* のためのヘルパやユーティリティです。

:doc:`webdesign のドキュメント </ref/contrib/webdesign>` を参照してください。

その他のアドオン
=================

``contrib`` に入れたらよいと思う機能について何かアイデアがあるなら、是非教
えて下さい! コードを書いて、 `django-users mailing list`_ に送って下さい。

.. _django-users mailing list: http://groups.google.com/group/django-users
